// <auto-generated />
using System;
using LolFantasy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LolFantasy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LolFantasy.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2024, 2, 20, 16, 0, 35, 951, DateTimeKind.Local).AddTicks(8039),
                            Email = "Jamespchellew@outlook.com",
                            FirstName = "James",
                            LastName = "Chellew",
                            PhoneNumber = "0432665009",
                            PhotoUrl = "",
                            UpdateTime = new DateTime(2024, 2, 20, 16, 0, 35, 951, DateTimeKind.Local).AddTicks(8047)
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2024, 2, 20, 16, 0, 35, 951, DateTimeKind.Local).AddTicks(8049),
                            Email = "Ash@outlook.com",
                            FirstName = "Ash",
                            LastName = "T",
                            PhoneNumber = "0412312312",
                            PhotoUrl = "",
                            UpdateTime = new DateTime(2024, 2, 20, 16, 0, 35, 951, DateTimeKind.Local).AddTicks(8050)
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2024, 2, 20, 16, 0, 35, 951, DateTimeKind.Local).AddTicks(8055),
                            Email = "Liam@outlook.com",
                            FirstName = "Liam",
                            LastName = "p",
                            PhoneNumber = "0409987987",
                            PhotoUrl = "",
                            UpdateTime = new DateTime(2024, 2, 20, 16, 0, 35, 951, DateTimeKind.Local).AddTicks(8055)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
